// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserGroup {
  id        Int      @id @default(autoincrement())
  name String @db.VarChar(30)
  level Int
  desc String

  is_deleted Boolean @default(false)
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  @@map("user_groups")
}

model User {
  id        Int      @id @default(autoincrement())
  name String @db.VarChar(100)
  email String @db.VarChar(35) @unique
  hash  String @db.VarChar(255)
  remember_token String? @db.VarChar(255)
  refresh_token String? @db.VarChar(255)
  jwt_token String? @db.VarChar(255)

  group_id Int

  is_active Boolean @default(false)
  is_deleted Boolean @default(false)
  createdBy Int?
  updatedBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookmarks Bookmark[]
  userOtp UserOtp[]

  userGroup UserGroup @relation(fields: [group_id], references: [id])

  @@map("users") // table name
}

model UserOtp {
  id Int @id @default(autoincrement())
  otp String @db.VarChar(9)
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  @@map("user_otps")
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  link        String

  userId Int
  user User @relation(fields: [userId], references: [id])
  @@map("bookmarks") // table name
}
